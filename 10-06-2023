class Solution {
public:
    int maxValue(int n, int index, int maxSum) {
        long r = n-index-1;
        long l = index;
        long low = 1;
        long high = maxSum;

        int res = 0;
        while(low<=high)
        {
            long mid = low+(high-low)/2;
            long sum = mid;
            long le = 0;
            long ri = 0; 
            long m = mid-1;

            if(r<=m)
            {
                ri = m*(m+1)/2 - (m-r)*(m-r+1)/2;
            }
            else
            {
                ri = m*(m+1)/2 + 1*(r-m);
            }
            if(l<=m)
            {
                le = m*(m+1)/2 - (m-l)*(m-l+1)/2;
            }
            else
            {
                le = m*(m+1)/2 + 1*(l-m);
            }
            sum += le+ri;
            if(sum<=maxSum)
            {
                res = mid;
                low = mid+1;
            }
            else
            {
                high = mid-1;
            }
        }
        return res;
    }
};
